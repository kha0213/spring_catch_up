version: '3.8'

services:
  # Loki (로그 수집 및 저장)
  loki:
    image: grafana/loki:2.9.0
    container_name: catch-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - catch-network

  # Promtail (로그 수집 에이전트)
  promtail:
    image: grafana/promtail:2.9.0
    container_name: catch-promtail
    volumes:
      - /var/log:/var/log:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - ./logs:/app/logs:ro  # Spring Boot 로그 폴더
    command: -config.file=/etc/promtail/config.yml
    networks:
      - catch-network
    depends_on:
      - loki

  # Grafana (시각화)
  grafana:
    image: grafana/grafana:10.1.0
    container_name: catch-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - catch-network
    depends_on:
      - loki

  # Redis (기존)
  redis:
    image: redis:7-alpine
    container_name: catch-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - catch-network

  # MySQL (기존)
  mysql:
    image: mysql:8.0
    container_name: catch-mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - catch-network

  # MongoDB (기존)
  mongodb:
    image: mongo:6.0
    container_name: catch-mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
    networks:
      - catch-network

volumes:
  loki_data:
  grafana_data:
  redis_data:
  mysql_data:
  mongodb_data:

networks:
  catch-network:
    driver: bridge